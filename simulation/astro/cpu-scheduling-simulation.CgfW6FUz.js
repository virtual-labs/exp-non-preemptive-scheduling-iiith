import{r as h}from"./index.Dy6lLLXr.js";/* empty css                       */var C={exports:{}},f={};/**
 * @license React
 * react-jsx-runtime.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var A;function K(){if(A)return f;A=1;var s=Symbol.for("react.transitional.element"),a=Symbol.for("react.fragment");function r(o,c,l){var p=null;if(l!==void 0&&(p=""+l),c.key!==void 0&&(p=""+c.key),"key"in c){l={};for(var m in c)m!=="key"&&(l[m]=c[m])}else l=c;return c=l.ref,{$$typeof:s,type:o,key:p,ref:c!==void 0?c:null,props:l}}return f.Fragment=a,f.jsx=r,f.jsxs=r,f}var E;function ee(){return E||(E=1,C.exports=K()),C.exports}var e=ee();/**
 * @license lucide-react v0.477.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const te=s=>s.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase(),J=(...s)=>s.filter((a,r,o)=>!!a&&a.trim()!==""&&o.indexOf(a)===r).join(" ").trim();/**
 * @license lucide-react v0.477.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */var se={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round"};/**
 * @license lucide-react v0.477.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const ne=h.forwardRef(({color:s="currentColor",size:a=24,strokeWidth:r=2,absoluteStrokeWidth:o,className:c="",children:l,iconNode:p,...m},P)=>h.createElement("svg",{ref:P,...se,width:a,height:a,stroke:s,strokeWidth:o?Number(r)*24/Number(a):r,className:J("lucide",c),...m},[...p.map(([T,k])=>h.createElement(T,k)),...Array.isArray(l)?l:[l]]));/**
 * @license lucide-react v0.477.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const ie=(s,a)=>{const r=h.forwardRef(({className:o,...c},l)=>h.createElement(ne,{ref:l,iconNode:a,className:J(`lucide-${te(s)}`,o),...c}));return r.displayName=`${s}`,r};/**
 * @license lucide-react v0.477.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const ae=[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["path",{d:"M12 16v-4",key:"1dtifu"}],["path",{d:"M12 8h.01",key:"e9boi3"}]],x=ie("Info",ae);function oe(){const[s,a]=h.useState({Ready:[],Running:null,Waiting:[],Terminated:[],Completed:[],Map:{id:null,run_time:null,burst_time:null},Timer:null,Policy:null,clickedState:null,time_counter:0,id_counter:1,quantum:null}),[r,o]=h.useState({tick:!1,schedule:!1,newProcess:!0,terminate:!1,undo:!1,redo:!1,io:!1,int:!1}),[c,l]=h.useState([]),[p,m]=h.useState([]),[P,T]=h.useState(!1),[k,Y]=h.useState(""),[U,$]=h.useState(!1),[I,y]=h.useState(!1),[v,R]=h.useState(""),[b,q]=h.useState(""),[M,D]=h.useState([]),[S,L]=h.useState({feedback:"Please select a scheduling policy before starting the experiment.",prompt:"Click on the 'Scheduling Policy' dropdown and select one of the policies for the simulation."}),[g,w]=h.useState(!1),[N,z]=h.useState(!1),[Q,O]=h.useState(!1),u=t=>{Y(t),O(!0)},d=(t,n)=>{L({feedback:t,prompt:n}),D(i=>[...i,{feedback:t,prompt:n}])},B=t=>{if(s.time_counter===0){const n={...s,Policy:t==="None"?null:t};a(n),t!=="None"?(d(`The scheduling policy has been updated to ${t}.`,"It's time to create a new process. Click on the '+ New process' button. Make sure to enter the burst time (between 1 and 30) for the process, and then click on the 'Tick' button to advance the simulation."),t==="RR"&&(y(!0),d(`The scheduling policy has been updated to ${t}.`,"It's time to create a new process. First, click on the 'Quantum' button. Set the time quantum to a value between 1 and 15. Then, click on the '+ New process' button."))):d("Please select a scheduling policy before starting the experiment.","Click on the 'Scheduling Policy' dropdown and select one of the policies for the simulation.")}else u("The scheduling policy cannot be changed mid-simulation. Please click on the 'Reset' button to be able to choose another scheduling policy.")},H=()=>{if(Number.parseInt(b)>15){u("The time quantum cannot be greater than 15.");return}a(t=>({...t,quantum:Number.parseInt(b)})),d(`Quantum updated to ${b}.`,`You have set the time quantum to ${b}. Now, click on the '+ New process' button.`),y(!1),o(t=>({...t,newProcess:!0}))},F=()=>{if(!s.Policy){u("Please select a scheduling policy before starting the experiment.");return}if(!v){u("Please enter a burst time for the process between 1 to 30.");return}const t=Number.parseInt(v);if(isNaN(t)||t<1||t>30){u("Please enter a valid burst time between 1 to 30.");return}const n={id:s.id_counter,arrival_time:s.time_counter,burst_time:t,status:"Ready",mapping:{run_time:0,burst_time:t}};a(i=>({...i,Ready:[...i.Ready,n],id_counter:i.id_counter+1,clickedState:null})),R(""),$(!1),d("A new process has successfully been created and added to the process queue.","Now, you can either schedule any existing process(es) by clicking on the 'Schedule' button, or you can create another process by clicking on the '+ New process' button."),o(i=>({...i,schedule:!0,tick:!1}))},j=t=>{if(!s.Policy&&t!=="newProcess"){u("Please select a scheduling policy before starting the experiment.");return}if(console.log(`Command: ${t}`),t==="newProcess")$(n=>!n),a(n=>({...n,clickedState:"newProcess"})),d("You chose the '+ New process' button.","Please make sure that you have entered the burst time (between 1 and 30) for the process, and then click on the 'Tick' button to advance the simulation.");else if(t==="schedule"){if(s.Ready.length===0){u("No processes are ready to be scheduled. Please create a new process first.");return}a(n=>({...n,clickedState:"schedule"})),o(n=>({...n,tick:!0})),d("You have chosen the 'Schedule' button.","Click on the 'Tick' button to schedule the next process according to the selected policy.")}else if(t==="terminate"){if(!s.Running){u("No process is currently running. Please schedule a process first.");return}a(n=>({...n,clickedState:"terminate"})),o(n=>({...n,tick:!0})),d("You have chosen the 'Terminate' button.","Click on the 'Tick' button to terminate the currently running process.")}else if(t==="io_int"){if(!s.Running){u("No process is currently running. Please schedule a process first.");return}a(n=>({...n,clickedState:"io_int"})),o(n=>({...n,tick:!0})),d("You have chosen the 'I/O Interrupt' button.","Click on the 'Tick' button to move the running process to the waiting queue.")}else if(t==="io_cmpl"){if(s.Waiting.length===0){u("No processes are waiting for I/O. Please interrupt a process first.");return}a(n=>({...n,clickedState:"io_cmpl"})),o(n=>({...n,tick:!0})),d("You have chosen the 'I/O Complete' button.","Click on the 'Tick' button to move a process from the waiting queue to the ready queue.")}else if(t==="int"){if(!s.Running){u("No process is currently running. Please schedule a process first.");return}a(n=>({...n,clickedState:"int"})),o(n=>({...n,tick:!0})),d("You have chosen the 'Interrupt' button.","Click on the 'Tick' button to interrupt the currently running process.")}},G=()=>{if(!s.Policy){u("Please select a scheduling policy before starting the experiment.");return}const t=JSON.parse(JSON.stringify(s));if(s.clickedState==="newProcess")F(),a(n=>({...n,time_counter:n.time_counter+1,clickedState:null})),l(n=>[...n,{action:"newProcess",state:t}]),m([]);else if(s.clickedState==="schedule"){const n=s.Ready[0];if(!n){u("No processes are ready to be scheduled.");return}a(i=>({...i,Running:n,Ready:i.Ready.filter(_=>_.id!==n.id),time_counter:i.time_counter+1,clickedState:null})),o(i=>({...i,tick:!0,schedule:!1,terminate:!0,io:!0,int:!0})),l(i=>[...i,{action:"schedule",state:t}]),m([]),d(`Process ${n.id} is now running on the CPU.`,"You can now tick to execute the process, terminate it, or interrupt it.")}else if(s.clickedState==="terminate"){const n=s.Running;if(!n){u("No process is currently running.");return}a(i=>({...i,Running:null,Terminated:[...i.Terminated,{...n,status:"Terminated"}],time_counter:i.time_counter+1,clickedState:null})),o(i=>({...i,tick:!1,schedule:s.Ready.length>0,terminate:!1,io:!1,int:!1})),l(i=>[...i,{action:"terminate",state:t}]),m([]),d(`Process ${n.id} has been terminated.`,"You can now schedule another process if available.")}else if(s.clickedState==="io_int"){const n=s.Running;if(!n){u("No process is currently running.");return}a(i=>({...i,Running:null,Waiting:[...i.Waiting,{...n,status:"Waiting"}],time_counter:i.time_counter+1,clickedState:null})),o(i=>({...i,tick:!1,schedule:s.Ready.length>0,terminate:!1,io:!1,int:!1,io_cmpl:!0})),l(i=>[...i,{action:"io_int",state:t}]),m([]),d(`Process ${n.id} has been moved to the waiting queue.`,"You can now schedule another process if available or complete I/O for the waiting process.")}else if(s.clickedState==="io_cmpl"){if(s.Waiting.length===0){u("No processes are waiting for I/O.");return}const n=s.Waiting[0];a(i=>({...i,Waiting:i.Waiting.filter(_=>_.id!==n.id),Ready:[...i.Ready,{...n,status:"Ready"}],time_counter:i.time_counter+1,clickedState:null})),o(i=>({...i,tick:!1,schedule:!0,io_cmpl:s.Waiting.length>1})),l(i=>[...i,{action:"io_cmpl",state:t}]),m([]),d(`Process ${n.id} has been moved from the waiting queue to the ready queue.`,"You can now schedule this process or another process if available.")}else if(s.clickedState==="int"){const n=s.Running;if(!n){u("No process is currently running.");return}a(i=>({...i,Running:null,Ready:[...i.Ready,{...n,status:"Ready"}],time_counter:i.time_counter+1,clickedState:null})),o(i=>({...i,tick:!1,schedule:!0,terminate:!1,io:!1,int:!1})),l(i=>[...i,{action:"int",state:t}]),m([]),d(`Process ${n.id} has been interrupted and moved back to the ready queue.`,"You can now schedule this process or another process.")}else if(s.Running){const n={...s.Running};n.mapping.run_time++,n.mapping.run_time>=n.mapping.burst_time?(a(i=>({...i,Running:null,Completed:[...i.Completed,{...n,status:"Completed"}],time_counter:i.time_counter+1})),o(i=>({...i,tick:!1,schedule:s.Ready.length>0,terminate:!1,io:!1,int:!1})),d(`Process ${n.id} has completed execution.`,"You can now schedule another process if available.")):(a(i=>({...i,Running:n,time_counter:i.time_counter+1})),d(`Process ${n.id} is executing. Remaining time: ${n.mapping.burst_time-n.mapping.run_time}`,"Continue ticking to execute the process, or use other controls.")),l(i=>[...i,{action:"tick",state:t}]),m([])}else u("No action to perform. Please select an operation first.")},V=()=>{if(c.length<=1){u("Nothing to undo.");return}m(n=>[...n,c[c.length-1]]);const t=[...c];t.pop(),l(t),a(JSON.parse(JSON.stringify(t[t.length-1].state))),W(JSON.parse(JSON.stringify(t[t.length-1].state))),d("Undo successful.","The simulation has been reverted to the previous state.")},Z=()=>{if(p.length===0){u("Nothing to redo.");return}const t=p[p.length-1],n=[...p];n.pop(),m(n),a(JSON.parse(JSON.stringify(t.state))),l(i=>[...i,t]),W(JSON.parse(JSON.stringify(t.state))),d("Redo successful.","The simulation has been advanced to the next state.")},W=t=>{o({tick:t.Running!==null,schedule:t.Ready.length>0&&t.Running===null,newProcess:!0,terminate:t.Running!==null,undo:c.length>1,redo:p.length>0,io:t.Running!==null,int:t.Running!==null})},X=()=>{a({Ready:[],Running:null,Waiting:[],Terminated:[],Completed:[],Map:{id:null,run_time:null,burst_time:null},Timer:null,Policy:null,clickedState:null,time_counter:0,id_counter:1,quantum:null}),o({tick:!1,schedule:!1,newProcess:!0,terminate:!1,undo:!1,redo:!1,io:!1,int:!1}),l([]),m([]),R(""),q(""),d("The simulation has been reset.","Please select a scheduling policy before starting the experiment.")};return e.jsxs("div",{className:"container",children:[e.jsx("h1",{className:"title"}),e.jsxs("div",{className:"instructions-panel",children:[e.jsxs("div",{className:"instructions-header",onClick:()=>z(!N),children:[e.jsxs("h2",{children:["Instructions",e.jsxs("span",{className:"info-icon",children:[e.jsx(x,{size:16,className:"info-icon-svg"}),e.jsx("span",{className:"tooltip",children:"Click to expand/collapse instructions"})]})]}),e.jsx("span",{className:`collapse-icon ${N?"open":""}`,children:N?"▼":"►"})]}),N&&e.jsxs("div",{className:"instructions-content",children:[e.jsxs("p",{children:[e.jsx("strong",{children:"Objective:"})," This experiment demonstrates CPU scheduling algorithms and process management."]}),e.jsxs("ol",{children:[e.jsx("li",{children:"Select a scheduling policy from the dropdown (FCFS, SJF, SRTF, or Round Robin)."}),e.jsx("li",{children:"For Round Robin, set a time quantum (1-15)."}),e.jsx("li",{children:'Create processes by clicking "New process" and entering burst times (1-30).'}),e.jsx("li",{children:'Use "Schedule" to assign processes to the CPU according to the selected policy.'}),e.jsx("li",{children:'Click "Tick" to advance the simulation by one clock cycle.'}),e.jsx("li",{children:'Use "Terminate" to end the current process, "I/O Interrupt" to move it to the waiting queue, or "Interrupt" to return it to the ready queue.'}),e.jsx("li",{children:'Use "I/O Complete" to move processes from the waiting queue back to the ready queue.'}),e.jsx("li",{children:"Follow the dialog box for guidance throughout the experiment."})]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Note:"})," Create a new process to start the simulation. Please refer to the dialog box during the experiment."]})]})]}),e.jsxs("div",{className:"simulation-container",children:[e.jsxs("div",{className:"left-panel",children:[e.jsxs("h2",{children:["System State",e.jsxs("span",{className:"info-icon",children:[e.jsx(x,{size:16,className:"info-icon-svg"}),e.jsx("span",{className:"tooltip",children:"Current and previous states of the system"})]})]}),e.jsxs("div",{className:"state-tabs",children:[e.jsxs("button",{className:`tab-button ${g?"":"active"}`,onClick:()=>w(!1),children:["Current State",e.jsx("span",{className:"tooltip",children:"View the current state of the system"})]}),e.jsxs("button",{className:`tab-button ${g?"active":""}`,onClick:()=>w(!0),children:["Previous States",e.jsx("span",{className:"tooltip",children:"View the history of system states"})]})]}),e.jsx("div",{className:"state-content",children:g?e.jsx("div",{className:"previous-states",children:c.length===0?e.jsx("p",{className:"no-states",children:"No previous states available."}):c.map((t,n)=>e.jsxs("div",{className:"state-item",children:[e.jsxs("div",{className:"state-header",onClick:()=>{},children:["Tick ",n+1," - ",t.action]}),e.jsxs("div",{className:"state-details",children:[e.jsxs("p",{children:["Action: ",t.action]}),e.jsxs("p",{children:["Time: ",t.state.time_counter]})]})]},n))}):e.jsx("table",{className:"state-table",children:e.jsxs("tbody",{children:[e.jsxs("tr",{children:[e.jsx("td",{children:"Ready:"}),e.jsx("td",{children:s.Ready.length>0?`[ ${s.Ready.map(t=>t.id).join(", ")} ]`:"[ ]"})]}),e.jsxs("tr",{children:[e.jsx("td",{children:"Waiting for I/O:"}),e.jsx("td",{children:s.Waiting.length>0?`[ ${s.Waiting.map(t=>t.id).join(", ")} ]`:"[ ]"})]}),e.jsxs("tr",{children:[e.jsx("td",{children:"Terminated:"}),e.jsx("td",{children:s.Terminated.length>0?`[ ${s.Terminated.map(t=>t.id).join(", ")} ]`:"[ ]"})]}),e.jsxs("tr",{children:[e.jsx("td",{children:"Completed:"}),e.jsx("td",{children:s.Completed.length>0?`[ ${s.Completed.map(t=>t.id).join(", ")} ]`:"[ ]"})]}),e.jsxs("tr",{children:[e.jsx("td",{children:"CPU:"}),e.jsx("td",{children:s.Running?s.Running.id:"None"})]}),e.jsxs("tr",{children:[e.jsx("td",{children:"Map:"}),e.jsx("td",{children:s.Running?`${s.Running.id}->${s.Running.mapping.run_time}:${s.Running.mapping.burst_time}`:"-"})]}),e.jsxs("tr",{children:[e.jsx("td",{children:"Timer:"}),e.jsx("td",{children:s.Timer!==null?s.Timer:"-"})]}),e.jsxs("tr",{children:[e.jsx("td",{children:"Scheduling policy:"}),e.jsx("td",{children:s.Policy||"None"})]})]})})})]}),e.jsxs("div",{className:"middle-panel",children:[e.jsxs("div",{className:"cpu-display",children:[e.jsxs("h2",{children:["CPU",e.jsxs("span",{className:"info-icon",children:[e.jsx(x,{size:16,className:"info-icon-svg"}),e.jsx("span",{className:"tooltip",children:"Shows the process currently running on the CPU"})]})]}),e.jsxs("table",{className:"process-table",children:[e.jsx("thead",{children:e.jsxs("tr",{children:[e.jsx("th",{children:"Process ID"}),e.jsx("th",{children:"Burst Time"}),e.jsx("th",{children:"Run Time"})]})}),e.jsx("tbody",{children:s.Running?e.jsxs("tr",{children:[e.jsx("td",{children:s.Running.id}),e.jsx("td",{children:s.Running.mapping.burst_time}),e.jsx("td",{children:s.Running.mapping.run_time})]}):e.jsx("tr",{children:e.jsx("td",{colSpan:"3",className:"no-process",children:"No process running"})})})]})]}),e.jsxs("div",{className:"processes-display",children:[e.jsxs("h2",{children:["Processes",e.jsxs("span",{className:"info-icon",children:[e.jsx(x,{size:16,className:"info-icon-svg"}),e.jsx("span",{className:"tooltip",children:"Shows all processes in the system and their current status"})]})]}),e.jsxs("table",{className:"process-table",children:[e.jsx("thead",{children:e.jsxs("tr",{children:[e.jsx("th",{children:"Process ID"}),e.jsx("th",{children:"Arrival Time"}),e.jsx("th",{children:"Burst Time"}),e.jsx("th",{children:"Remaining Time"}),e.jsx("th",{children:"Status"})]})}),e.jsxs("tbody",{children:[s.Running&&e.jsxs("tr",{children:[e.jsx("td",{children:s.Running.id}),e.jsx("td",{children:s.Running.arrival_time}),e.jsx("td",{children:s.Running.mapping.burst_time}),e.jsx("td",{children:s.Running.mapping.burst_time-s.Running.mapping.run_time}),e.jsx("td",{children:e.jsx("span",{className:"status running",children:"Running"})})]}),s.Ready.map((t,n)=>e.jsxs("tr",{children:[e.jsx("td",{children:t.id}),e.jsx("td",{children:t.arrival_time}),e.jsx("td",{children:t.burst_time}),e.jsx("td",{children:t.burst_time-t.mapping.run_time}),e.jsx("td",{children:e.jsx("span",{className:"status ready",children:"Ready"})})]},`ready-${n}`)),s.Waiting.map((t,n)=>e.jsxs("tr",{children:[e.jsx("td",{children:t.id}),e.jsx("td",{children:t.arrival_time}),e.jsx("td",{children:t.burst_time}),e.jsx("td",{children:t.burst_time-t.mapping.run_time}),e.jsx("td",{children:e.jsx("span",{className:"status waiting",children:"Waiting"})})]},`waiting-${n}`)),s.Completed.map((t,n)=>e.jsxs("tr",{children:[e.jsx("td",{children:t.id}),e.jsx("td",{children:t.arrival_time}),e.jsx("td",{children:t.burst_time}),e.jsx("td",{children:"0"}),e.jsx("td",{children:e.jsx("span",{className:"status completed",children:"Completed"})})]},`completed-${n}`)),s.Terminated.map((t,n)=>e.jsxs("tr",{children:[e.jsx("td",{children:t.id}),e.jsx("td",{children:t.arrival_time}),e.jsx("td",{children:t.burst_time}),e.jsx("td",{children:"0"}),e.jsx("td",{children:e.jsx("span",{className:"status terminated",children:"Terminated"})})]},`terminated-${n}`)),s.Running===null&&s.Ready.length===0&&s.Waiting.length===0&&s.Completed.length===0&&s.Terminated.length===0&&e.jsx("tr",{children:e.jsx("td",{colSpan:"5",className:"no-process",children:"No processes created yet"})})]})]})]}),e.jsx("div",{className:"tick-display",children:e.jsxs("div",{className:"tick-counter",children:["Number of Ticks: ",e.jsx("span",{children:s.time_counter}),s.quantum&&e.jsxs("span",{children:[" | Quantum: ",s.quantum]})]})}),e.jsxs("div",{className:"controls",children:[e.jsxs("h2",{children:["Controls",e.jsxs("span",{className:"info-icon",children:[e.jsx(x,{size:16,className:"info-icon-svg"}),e.jsx("span",{className:"tooltip",children:"Control the simulation with these buttons"})]})]}),e.jsxs("div",{className:"policy-controls",children:[e.jsxs("label",{children:["Scheduling Policy:",e.jsxs("span",{className:"info-icon",children:[e.jsx(x,{size:16,className:"info-icon-svg"}),e.jsx("span",{className:"tooltip",children:"Select the algorithm used to schedule processes"})]})]}),e.jsxs("select",{value:s.Policy||"None",onChange:t=>B(t.target.value),className:"policy-select",children:[e.jsx("option",{value:"None",children:"Please Select the Scheduling Policy..."}),e.jsx("option",{value:"FCFS",children:"First Come First Serve"}),e.jsx("option",{value:"SJF",children:"Shortest Job First"}),e.jsx("option",{value:"SRTF",children:"Shortest Remaining Time First"}),e.jsx("option",{value:"RR",children:"Round-Robin"})]}),e.jsxs("button",{className:`control-button ${r.tick?"":"disabled"}`,onClick:G,disabled:!r.tick&&s.clickedState===null,children:["Tick",e.jsx("span",{className:"tooltip",children:"Advance the simulation by one clock cycle"})]})]}),e.jsxs("h3",{children:["Generate External Events",e.jsxs("span",{className:"info-icon",children:[e.jsx(x,{size:16,className:"info-icon-svg"}),e.jsx("span",{className:"tooltip",children:"Create events that affect process execution"})]})]}),e.jsxs("div",{className:"event-controls",children:[e.jsxs("button",{className:`control-button ${r.schedule?"":"disabled"}`,onClick:()=>j("schedule"),disabled:!r.schedule,children:["Schedule",e.jsx("span",{className:"tooltip",children:"Select the next process to run on the CPU"})]}),e.jsxs("button",{className:`control-button ${r.terminate?"":"disabled"}`,onClick:()=>j("terminate"),disabled:!r.terminate,children:["Terminate",e.jsx("span",{className:"tooltip",children:"End the currently running process"})]}),e.jsxs("button",{className:`control-button ${r.io?"":"disabled"}`,onClick:()=>j("io_int"),disabled:!r.io,children:["I/O Interrupt",e.jsx("span",{className:"tooltip",children:"Move the running process to the waiting queue for I/O"})]}),e.jsxs("button",{className:`control-button ${s.Waiting.length>0?"":"disabled"}`,onClick:()=>j("io_cmpl"),disabled:s.Waiting.length===0,children:["I/O Complete",e.jsx("span",{className:"tooltip",children:"Move a process from waiting to ready queue after I/O completion"})]}),e.jsxs("button",{className:`control-button ${r.int?"":"disabled"}`,onClick:()=>j("int"),disabled:!r.int,children:["Interrupt",e.jsx("span",{className:"tooltip",children:"Interrupt the running process and move it back to ready queue"})]}),e.jsxs("div",{className:"process-control",children:[e.jsxs("button",{className:`control-button ${r.newProcess?"":"disabled"}`,onClick:()=>j("newProcess"),disabled:!r.newProcess,children:["+ New process",e.jsx("span",{className:"tooltip",children:"Create a new process with specified burst time"})]}),U&&e.jsxs("div",{className:"dropdown-content",children:[e.jsx("textarea",{placeholder:"Enter Burst Time (1-30)",value:v,onChange:t=>R(t.target.value),rows:2}),e.jsx("button",{className:"dropdown-button",onClick:F,children:"Create"})]})]}),s.Policy==="RR"&&!s.quantum&&e.jsxs("div",{className:"quantum-control",children:[e.jsx("button",{className:"control-button",onClick:()=>y(!I),children:"Set Quantum"}),I&&e.jsxs("div",{className:"dropdown-content",children:[e.jsx("textarea",{placeholder:"Enter Quantum (1-15)",value:b,onChange:t=>q(t.target.value),rows:2}),e.jsx("button",{className:"dropdown-button",onClick:H,children:"Set"})]})]})]}),e.jsxs("h3",{children:["Undo & Redo",e.jsxs("span",{className:"info-icon",children:[e.jsx(x,{size:16,className:"info-icon-svg"}),e.jsx("span",{className:"tooltip",children:"Navigate through simulation history"})]})]}),e.jsxs("div",{className:"history-controls",children:[e.jsxs("button",{className:`control-button ${c.length>1?"":"disabled"}`,onClick:V,disabled:c.length<=1,children:["Undo",e.jsx("span",{className:"tooltip",children:"Go back to the previous state"})]}),e.jsxs("button",{className:`control-button ${p.length>0?"":"disabled"}`,onClick:Z,disabled:p.length===0,children:["Redo",e.jsx("span",{className:"tooltip",children:"Redo the previously undone action"})]}),e.jsxs("button",{className:"control-button reset",onClick:X,children:["Reset",e.jsx("span",{className:"tooltip",children:"Reset the simulation to its initial state"})]})]})]})]}),e.jsxs("div",{className:"right-panel",children:[e.jsxs("div",{className:"dialog-header",children:[e.jsxs("h2",{children:["Dialog box",e.jsxs("span",{className:"info-icon",children:[e.jsx(x,{size:16,className:"info-icon-svg"}),e.jsx("span",{className:"tooltip",children:"Shows feedback and guidance for the simulation"})]})]}),e.jsxs("button",{className:"settings-button",onClick:()=>w(!g),children:[g?"Hide History":"Show History",e.jsx("span",{className:"tooltip",children:"Toggle between current dialog and history"})]})]}),e.jsx("div",{className:"dialog-content",children:g?e.jsx("div",{className:"dialog-history",children:M.map((t,n)=>e.jsxs("div",{className:"dialog-item",children:[e.jsx("div",{className:"feedback-label",children:"Feedback"}),e.jsx("p",{className:"feedback",children:t.feedback}),t.prompt&&e.jsxs(e.Fragment,{children:[e.jsx("div",{className:"prompt-label",children:"Prompt"}),e.jsx("p",{className:"prompt",children:t.prompt})]})]},n))}):e.jsxs("div",{className:"current-dialog",children:[e.jsx("div",{className:"feedback-label",children:"Feedback"}),e.jsx("p",{className:"feedback",children:S.feedback}),S.prompt&&e.jsxs(e.Fragment,{children:[e.jsx("div",{className:"prompt-label",children:"Prompt"}),e.jsx("p",{className:"prompt",children:S.prompt})]})]})})]})]}),Q&&e.jsx("div",{className:"alert-overlay",children:e.jsxs("div",{className:"alert-dialog",children:[e.jsxs("div",{className:"alert-content",children:[e.jsx("div",{className:"alert-icon",children:e.jsx(x,{size:20})}),e.jsx("p",{className:"alert-message",children:k})]}),e.jsx("button",{className:"alert-button",onClick:()=>O(!1),children:"OK"})]})})]})}export{oe as default};
